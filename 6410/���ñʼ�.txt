课程安排：

day1: 开发环境
#1 课程内容和进度安排（自我介绍）
#2 ARM 概述
#3 ARM 硬件开发板简介
#4 u-boot 命令控制开发板
#5 ADS 开发工具安装
#6 helloworld 程序（及开发板运行）
#7 命令行开发工具
#8 GPIO编程实践(led/button)

day2: 体系结构
#9 ARM工作模式和寄存器
#10 ARM汇编和指令集 mov/add/b/cmp
#11 ARM指令集 ldr/str

#12 硬件手册导读
#13 S3C6410 SoC Peripheral
#14 System Memory Map
#15 CLOCK
#16 GPIO / UART 编码规范化

hypertrm

115200
无

0x0
0x0c000000

4K SRAM  0x1000
16K SRAM  0x4000

mini6410
	0x7F008800	GPK4
	mw 0x7F008800 0x11111111 
	md 0x7f008800
	0x7F008808
	mw 0x7F008808 0x0  亮
	mw 0x7F008808 0xffffffff  灭

top6410
	0x7F008830 (0x55540000) GPN6
	mw 0x7F008830 0x55555555
	md 0x7f008830
	0x7F008834
	mw 0x7F008834 0x0  亮
	mw 0x7F008834 0xffffffff  灭

控制UART输出
0x7F005020 UTXH0 
	mw 0x7F005020 'A' (0x61

控制蜂鸣器发声
MINI6410 # mw 0x7f0080a0 0x55555555
MINI6410 # mw 0x7f0080a4 0x4000
MINI6410 # mw 0x7f0080a4 0x0


armasm
armcc
armlink
fromelf

__main : 0x8000
(0xa8: 起到了很重要的作用，printf)
main   : 0x80a8

9876
9776


loadb 
选择 kermit ，选择 helloworld.bin

go 0x50000000
AAAAAAAAAA 看到输出


命令行工具开发
armcc hello.c -o hello.axf
fromelf -bin hello.axf -o hello.bin
fromelf -c hello.axf -o h.txt


-ro-base 0x50000000

ARM 工作模式 7种
USR, SYS, SVC, IRQ, FIQ, UND, ABT

ARM 寄存器 37个
37 = 17 + 0  + 3 + 3 + 3 + 3   + 8
     USR SYS  SVC  ABT UND IRQ  FIQ

37 = 8*1 + 5*2 + 2*6 + 1*1 + 1*1 + 1*5
    r0-r7 r8-r12 r13/14 r15  cpsr  spsr

ARM 指令集
mov 
add
b 
cmp

encoding  编码
mov r1, #3 
0xe3a01003

E    3    a    0    1    0    0    3
1110 0011 1010 0000 0001 0000 0000 0011

1101 opcode
0	S
0000 	Rn
0001 	Rd
0000	rotate
00000011	imme

add r0, r0, r1
0xe0800001
08 add
0000 1000
opcode 0100

 add r9, r7, r5
[0xe0879005]

汇编语言课堂作业
1+2+3+.... +10 = 55 (0x37)
ldr
str 
通过串口显示出来 0x37 = '7'


s3c6410 手册导读
Overview 章节
Block Diagram
PLL, GPIO, UART, CLOCK, JTAG, NandFlash/SDRAM, 
DMA, Timer, WatchDog, ADC, RTC, SPI, 
USB, LCD, Camera, CODEC, TV-OUT, 2D/3D, AC97, 

Pin Assignment / Pin Name
Pin Description / Default Function / IO State

UART: TxD/RxD (GPA0/GPA1)
Key: EINT0 (GPN0)
JTAG:  TDI, TDO, TCK, TRST, TMS

Memory Map 章节 
存储映射
physical address 物理地址 ldr/str [addr]
for memory 存储器 MEM
for pheriperal 外设 SFR

1) boot image area = 0x0 - 0x80 00000 (128M)
2) internal memory (iROM + iSRAM)
iROM = 32K
iSRAM = 4K(16K)	Stepping Stone 
0x40 00000 = 64M
3) Static Memory (SROM = SRAM + NorFlash)
Chip Select: Xm0CSn[0]

DDR SDRAM:
A0-A12:  13根 行地址
A0-A9: 10根 列地址
2^13 * 2^10 = 2^23 
8M 地址范围
BA0, BA1 = 2^2 
8M * 4 = 32M 地址范围
32M * 4byte = 128M bytes
-> 27根 * 8bit
-> 25根 * 32bit (4byte)
bit[24:0] wrong
bit[26:2]
bit26-------bit2 bit1 bit0
xxxxxx......xxxx 0    0
bit26 bit25: BA0/BA1
bit24----15: 10根: A9-A0 列
bit14----bit2: 13根：A12-A0  行

Xm0addr0 - addr26
SRAM/NorFlash:  一共有27根地址线=2^27=128M

Xm1addr0 - addr15
SDRAM/DDR: 一共有16根地址线

System Controler 系统控制器
CLOCK 时钟
Clock Generator 时钟发生器
PLL 锁相环 Phase Lock Loop
MDIV, PDIV, SDIV
Fout = Fin * MDIV / (PDIV*2^SDIV)
533M = 12M * 266 / (3 * 2^1)

查看 top6410 的寄存器配置
APLL_CON	0x7e00f00c: c1900301 (mini: c10a0301)
CLK_SRC 	0x7E00F01C：00002007
CLK_DIV0	0x7E00F020: 01043510
MISC_CON 	0x7E00F838: 00000000
OTHERS 		0x7E00F900: 00008ffe (1111 1110) 

MDIV: 0x190 = 400
PDIV: 3
SDIV: 1

MDIV:400
PDIV:3
SDIV:4
0xc1900304 慢一点
0xc1900604 慢更多一点

MUX：multiplex(er) 多路复用器

Fin_apll=12M (not 533M)
mw 0x7e00f01c 0x2006	cpu频率降低非常明显

Divider 分频器

TOP6410:
CLK_DIV0	0x7E00F020: 01043510 (mini6410=01043310 )
ARM_RATIO: 0+1
PCLK_RATIO: 3+1 = 4
HCLKX2_RATIO：(010) 2+1 = 3
top6410板子 PCLK: 800M / 3 / 4 = 266 /4 = 66M

Mini6410:
HCLKX2_RATIO：(010) 1+1 = 2
mini6410板子 PCLK: 533M / 2 / 4 = 266 /4 = 66M


day3：bootloader 实践
1-led
	led_init(); led_on(); led_off();
2-uart
	uart_init(); uart_putchar(); uart_getchar();
3-stdio
	puts(); gets(); putcharx(char); putx(int); 
	'\r'(0xd), '\n'(0xa), '\b'
--------------------------------------------------------	
4-shell
	shell_parse(char *); -> argc, argv[]
5-command
	help(); md(int); mw(int, int); mws(int, int, int)
	mws 0x50000000 0x1234 100
6-loader
	load(); go();

------------------------------------------------------------------
SMDK6410 # md 0x7f005000
7f005000: 00000003 00000e45 00000000 00000000    ....E...........
7f005010: 00000000 00000000 00000100 00000000    ................
7f005020: 00000000 0000000d 00000022 00001fff    ........".......
7f005030: 00000005 00000005 00000000 00000000    ................
7f005040: 00000000 00000000 00000000 00000000    ................
7f005050: 00000000 00000000 00000000 00000000    ................
7f005060: 00000000 00000000 00000000 00000000    ................
7f005070: 00000000 00000000 00000000 00000000    ................
7f005080: 00000000 00000000 00000000 00000000    ................
7f005090: 00000000 00000000 00000000 00000000    ................
7f0050a0: 00000000 00000000 00000000 00000000    ................
7f0050b0: 00000000 00000000 00000000 00000000    ................
7f0050c0: 00000000 00000000 00000000 00000000    ................
7f0050d0: 00000000 00000000 00000000 00000000    ................
7f0050e0: 00000000 00000000 00000000 00000000    ................
7f0050f0: 00000000 00000000 00000000 00000000    .............

UTXH0 = 'a'
------------
Buffer (0 - 64 FIFO)
----------------------
Shifter











*(int *)0x77100000 = 0x000002d3;
*(int *)0x77100004 = 0x01acc080;
*(int *)0x77100010 = 0x00020101;
*(int *)0x77100014 = 0x002c0305;
*(int *)0x77100018 = 0x000efb1f;
*(int *)0x77100020 = 0x00000021;
*(int *)0x77100024 = 0x00000001;
*(int *)0x77100044 = 0x0018f9df;
*(int *)0x77100048 = 0x0005dc00;
*(int *)0x771000a0 = 0x50200000;
*(int *)0x771000d0 = 0x00377000;
*(int *)0x77100100 = 0x00000c80;
*(int *)0x77100130 = 0x03f00000;
*(int *)0x77100170 = 0x0000002a;
*(int *)0x77100170 = 0x00178000;

LCD 配置参数：
SMDK6410 # md 0x77100000
77100000: 000002d3 01acc080 00000000 00000000    ................
77100010: 00020101 002c0305 000efb1f 00000000    ......,.........
77100020: 00000021 00000001 00000000 00000000    !...............
77100030: 00000000 00000000 00000000 00000000    ................
77100040: 00000000 0018f9df 0005dc00 00000000    ................
77100050: 00000000 00000000 00000000 00000000    ................
77100060: 00000000 00000000 00000000 00000000    ................
77100070: 00000000 00000000 00000000 00000000    ................
77100080: 00000000 00000000 00000000 00000000    ................
77100090: 00000000 00000000 00000000 00000000    ................
771000a0: 50200000 00000000 00000000 00000000    .. P............
771000b0: 00000000 00000000 00000000 00000000    ................
771000c0: 00000000 00000000 00000000 00000000    ................
771000d0: 00377000 00000000 00000000 00000000    .p7.............
771000e0: 00000000 00000000 00000000 00000000    ................
771000f0: 00000000 00000000 00000000 00000000    ................



SMDK6410 # md 0x77100100
77100100: 00000c80 00000000 00000000 00000000    ................
77100110: 00000000 00000000 00000000 00000000    ................
77100120: 00000000 00000000 00000000 00000000    ................
77100130: 03f00000 00000000 00000000 00000000    ................
77100140: 00000000 00000000 00000000 00000000    ................
77100150: 00000000 00000000 00000000 00000000    ................
77100160: 00000000 00000000 00000000 00000000    ................
77100170: 0000002a 00000000 00000000 00178000    *...............
77100180: 00000000 00000000 00000000 00000000    ................
77100190: 00000000 00000000 00000000 00000000    ................
771001a0: 00000000 00000000 00000000 00000000    ................
771001b0: 00000000 00000000 00000000 00000000    ................
771001c0: 00000000 00000000 00000000 00000000    ................
771001d0: 00000000 00000000 00000000 00000000    ................
771001e0: 00000000 00000000 00000000 00000000    ................
771001f0: 00000000 00000000 00000000 00000000    ................
SMDK6410 #

SMDK6410 # md 0x77100200
77100200: 00000000 00000000 00000000 00000000    ................
77100210: 00000000 00000000 00000000 00000000    ................
77100220: 00000000 00000000 00000000 00000000    ................
77100230: 00000000 00000000 00000000 00000000    ................
77100240: 00000000 00000000 00000000 00000000    ................
77100250: 00000000 00000000 00000000 00000000    ................
77100260: 00000000 00000000 00000000 00000000    ................
77100270: 00000000 00000000 00000000 00000000    ................
77100280: 00000000 00000000 00000000 00000000    ................
77100290: 00000000 00000000 00000000 00000000    ................
771002a0: 00000000 00000000 00000000 00000000    ................
771002b0: 00000000 00000000 00000000 00000000    ................
771002c0: 00000000 00000000 00000000 00000000    ................
771002d0: 00000000 00000000 00000000 00000000    ................
771002e0: 00000000 00000000 00000000 00000000    ................
771002f0: 00000000 00000000 00000000 00000000    ................
SMDK6410 #

SMDK6410 # md 0x77100300
77100300: 00000000 00000000 00000000 00000000    ................
77100310: 00000000 00000000 00000000 00000000    ................
77100320: 00000000 00000000 00000000 00000000    ................
77100330: 00000000 00000000 00000000 00000000    ................
77100340: 00000000 00000000 00000000 00000000    ................
77100350: 00000000 00000000 00000000 00000000    ................
77100360: 00000000 00000000 00000000 00000000    ................
77100370: 00000000 00000000 00000000 00000000    ................
77100380: 00000000 00000000 00000000 00000000    ................
77100390: 00000000 00000000 00000000 00000000    ................
771003a0: 00000000 00000000 00000000 00000000    ................
771003b0: 00000000 00000000 00000000 00000000    ................
771003c0: 00000000 00000000 00000000 00000000    ................
771003d0: 00000000 00000000 00000000 00000000    ................
771003e0: 00000000 00000000 00000000 00000000    ................
771003f0: 00000000 00000000 00000000 00000000    ................
SMDK6410 #

